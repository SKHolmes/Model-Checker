automata {
TrRed = (red->TrRed | turnGreen ->TrGreen),
TrGreen = (green->TrGreen|turnRed->TrRed).

TrR = TrRed/{x/green}.
TrX = TrRed\{red,green}.
TrY = abs(TrX).  // Works
TrXx = TrRed\{red,green,turnRed}.
//TrYx = abs(TrXx). // *Fails*
//TrRR = TrRed/{x/green,y/turnGreen}.
}

const N = 3
automata 
{
Farmer = ([i:0..N].task ->W[i]),
   W[i:0..N] = ([i].end->Farmer).
}


automata {
Lock = ([i:1..N].setlock -> L[i]),
   L[j:1..N] = ([i:1..N].enter ->
                        ( when (i==j)open ->close->L[j]
                         |when(i!=j) error->Lock)).

Money = C[1],
                      C[i:1..N] = (when(i<N) coin->C[i+1]
                                  |when(i==N) coin->C[1]).
}

automata {
Buf= (in->out->Buf).
B2 = (one:Buf||two:Buf).
//B2move = (one:Buf||two:Buf)/{move/one.out,move/two.in}.
B2m = (one:Buf /{move/one.out} ||two:Buf/{move/two.in}).

TwoCoinT = (one->Fair| three->T),
  Fair = ( toss->head->Fair | toss->tail->Fair),
  T = (toss-> tail ->T).
  
TwoCoinH = (one->Fair|two ->H),
  Fair = ( toss->head->Fair | toss->tail->Fair),
  H = (toss-> head->H).
}


// renaming  working but only for single renaming 
//  *Fail* TrRR = TrRed/{x/green,y/turnGreen}.


TrX = TrRed\{red,green}.


//  *Fail* automata TrXX = abs(TrX).

//Program can not recover, even after text is amended, from error 
//      TypeError: analysis[reference] is undefined







TwoCoinT = (one->Fair| three->T),
  Fair = ( toss->head->Fair | toss->tail->Fair),
  T = (toss-> tail ->T).


TwoCoinH = (one->Fair|two ->H),
  Fair = ( toss->head->Fair | toss->tail->Fair),
  H = (toss-> head->H).











