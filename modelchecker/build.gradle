buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}
import org.apache.tools.ant.taskdefs.condition.Os

static getNatives() {
    String ret = "../resources/native/"
    if (System.getProperty("os.arch").endsWith("64")) ret += "amd64"
    if (System.getProperty("os.arch").endsWith("86")) ret += "x86"
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        ret+="-windows"
    } else if (Os.isFamily(Os.FAMILY_MAC)) {
        ret+="-macosx"
    } else {
        ret +="-linux"
    }
    return ret
}

plugins {
    id 'com.github.johnrengelman.shadow' version '1.2.4'
    id "com.moowork.node" version "1.2.0"
}

group 'net.modelchecker'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'com.github.johnrengelman.shadow'
shadowJar {
    baseName = 'ModelChecker'
    classifier = null
    version = null
    destinationDir = new File("../")
}

allprojects {
    apply plugin: 'eclipse'
    apply plugin: 'idea'

    version = '1.0'

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }
}
subprojects {
    apply plugin: 'java'
    apply from: "$rootDir/gradle/version.gradle"
    apply plugin: "com.github.johnrengelman.shadow"

    repositories { jcenter() }
    dependencies {
        if (project.name != "ast") {
            compile project(":ast")
        }
        if (project.name != 'util') {
            compile project(":util")
        }
        testCompile group: 'junit', name: 'junit', version: '4.11'
        compileOnly 'org.projectlombok:lombok:1.16.12'
        compile 'uk.com.robust-it:cloning:1.9.3'
        compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    }
    sourceCompatibility = 1.8

    test {
        //TODO: Edit this to make it work when we change the resource directory
        workingDir new File("../src/main/resources/")
        testLogging {
            showStandardStreams = true
        }
        systemProperty "java.library.path", natives
        environment "PATH", natives
        environment "LD_LIBRARY_PATH", natives
        //TODO: We need to use a specific lib dir on mac.
        environment "DYLD_LIBRARY_PATH", natives
    }
}
test.dependsOn 'cleanTest'

tasks.eclipse.doLast {
    delete '.project'
}
