processes {
AP:{ //Like broadcast must have only one of  a^ OR a
 
A= a->STOP.  
 A1= b^->STOP.
 A2= b^->STOP|c^->STOP.
 A3= b^->STOP|a->STOP.
 A4= c^->STOP|a->STOP.
 A5= d->STOP|a->STOP.
 
 B= a->a->STOP.  
 B1= a->b^->STOP. 
 B11 = a->d->STOP.
 B12 = b^->c^->STOP.
 B13 = c^->d->STOP.
 B2= a->b^->STOP|a->STOP.
 B21= a->b^->STOP|d->STOP.
 B3= a->b^->STOP|a->c^->STOP.
 B4= a->(b^->STOP|c^->STOP). 
 B5= b^->b^->STOP|b^->STOP.
 B6= c^->b^->STOP|b^->STOP.
 B7= c^->b^->STOP|a->c^->STOP.
 B8= c^->(a->STOP|d->STOP). 

 L= a->L.  
 L1= b^->L1.
 L2= a->b^->L2|a->STOP.
 L3= b^->a->L3|a->STOP. 
 L4= b^->a->L4|b^->STOP. 
 L5= b^->a->L5|c^->STOP. 
 
 Lx= b^->b^->Lx.  
 Ly= a->b^->Ly.
 Lz= a->d->Lz.
 Lx2= a->b^->Lx2|b^->STOP.
 Lx3= a->b^->Lx3|a->STOP. 
 Lx4= a->b^->Lx4|d->STOP. 

 Llx= a->a->Llx|a->Llx.  
 
Llx1= a->b^->Llx1|b^->b^->Llx1.
 Llx2= b^->a->Llx2|b^->Llx2.
 Llx3= b^->a->Llx3|c^->d->Llx3. 

 LlS= b^->a->c->STOP|b^->a->STOP|b^->STOP. 
 Ll4= b^->a->c->Ll4|b^->a->Ll4|b^->Ll4. 
 Ll5= b^->(a->c^->a->Ll5|a->c^->Ll5|a->Ll5). 
 Ll6= b^-> X, X = (a->c^->Ll6|b^->a->X|b^->Ll6). 

}
BC:{

 Abc=  fap2bc{b,c}(a->STOP).  
A5bc= d?->STOP|a?->STOP.
 A1bc= fap2bc{b,c}(a->STOP|b!->STOP).
//Lzbc= a?->d?->Lzbc.
 A2bc= fap2bc{b,c}(b^->STOP|c^->STOP).
 A3bc= b!->STOP|a?->STOP.
 A4bc= c!->STOP|a?->STOP.
 //A4btc= (t->c!->STOP|a?->STOP)\{t}.
 

 Bbc= a?->a?->STOP.  
 B1bc= a?->b!->STOP.
 B11bc= a?->d?->STOP. 
 B12bc= b!->c!->STOP.
 B13bc= c!->d?->STOP.
 B2bc= a?->b!->STOP|a?->STOP.
 B21bc= a?->b!->STOP|d?->STOP.
 B3bc= a?->b!->STOP|a?->c!->STOP.
 B4bc= a?->(b!->STOP|c!->STOP). 
 B5bc= b!->b!->STOP|b!->STOP.
 B6bc= c!->b!->STOP|b!->STOP.
 B7bc= c!->b!->STOP|a?->c!->STOP.
 B8bc= c!->(a?->STOP|d?->STOP). 

 //Lbc= a?->Lbc.  
 L1bc= b!->L1bc.
 L2bc= a?->b!->L2bc|a?->STOP.
 L3bc= b!->a?->L3bc|a?->STOP. 
 L4bc= b!->a?->L4bc|b!->STOP. 
 L5bc= b!->a?->L5bc|c!->STOP. 
 
 Lxbc= b!->b!->Lxbc.  
 Lybc= a?->b!->Lybc.

 Lzbc= a?->d?->Lzbc.

/*
 Lx2bc= a?->b!->Lx2bc|b!->STOP.
 Lx3bc= a?->b!->Lx3bc|a?->STOP. 
 Lx4bc= a?->b!->Lx4bc|d?->STOP. 
 Llxbc= a?->a?->Llxbc|a?->Llxbc.  
 Llx1bc= a?->b!->Llx1bc|b!->b!->Llx1bc.
 Llx2bc= b!->a?->Llx2bc|b!->Llx2bc.
 Llx3bc= b!->a?->Llx3bc|c!->d?->Llx3bc. 

 LlSbc= b!->a?->c->STOP|b!->a?->STOP|b!->STOP. 
 Ll4bc= b!->a?->c->Ll4bc|b!->a?->Ll4bc|b!->Ll4bc. 
 Ll5bc= b!->(a?->c!->a?->Ll5bc|a?->c!->Ll5bc|a?->Ll5bc). 
 Ll6bc= b!-> X, X = (a?->c!->Ll6bc|b!->a?->X|b!->Ll6bc).  */
}
Mx:{ //Mixed AP and BC
//  Bc  a?, d?, c!, b!  Ap  e,f,g^,h^
 Ma=  (a?->STOP).  
 Mb=  b!->STOP.  
 Me=  (e->STOP).  
 Mg=  (g^->STOP).  
 Mad= d?->STOP|a?->STOP.
 Mab= (a?->STOP|b!->STOP).
 Mag= g^->STOP|a?->STOP.
 Maf= f->STOP|a?->STOP.
 Mbc= (b!->STOP|c!->STOP).
 Mbg= g^->STOP|b!->STOP.
 Mbf= f->STOP|b!->STOP.
Mef = e->STOP|f->STOP.
Meg = e->STOP|g^->STOP.
Mhg = h^->STOP|g^->STOP.
 Mla=  (a?->Mla).  
 Mlb=  b!->Mlb.  
 Mle=  (e->Mle).  
 Mlg=  (g^->Mlg).  

 Mlad= d?->Mlad|a?->STOP.
 Mlab= (a?->Mlab|b!->STOP).
 Mlag= g^->STOP|a?->Mlag.
 Mlaf= f->STOP|a?->Mlaf.
 Mlbc= (b!->Mlbc|c!->STOP).
 Mlbg= g^->STOP|b!->Mlbg.
 Mlbf= f->STOP|b!->Mlbf.
Mlef = e->Mlef|f->STOP.
Mleg = e->Mleg|g^->STOP.
Mlhg = h^->Mlbg|g^->STOP.

 Mald= d?->Mald|a?->STOP.
 Malb= (a?->STOP|b!->Malb).
 Malg= g^->Malg|a?->STOP.
 Malf= f->Malf|a?->STOP.
 Mblg= g^->Mblg|b!->STOP.
 Mblf= f->Mblf|b!->STOP.
Melg = e->STOP|g^->Melg.
}

Zoo:{ 
Z3 = A3:AP.
Z1 = A1:AP.
Y3 = simp(abs(fap2bc{a,b,c}(A3:AP))).
Y1 = simp(abs(fap2bc{a,b,c}(A1:AP))). 

X3 = fap2bc{a,b,c}(A3:AP).
X1 = fap2bc{a,b,c}(A1:AP). 

}
}
operation{
A3:AP <f{cong}A1:AP.
//A1:AP <f{cong}A3:AP.
simp{cong}(abs{cong}(fap2bc{a,b,c}(A3:AP))) <qsf{cong} simp{cong}(abs{cong}(fap2bc{a,b,c}(A1:AP))). 
simp{cong}(abs(fap2bc{a,b,c}(A3:AP))) <qsf{cong} simp{cong}(abs(fap2bc{a,b,c}(A1:AP))). 
simp(abs(fap2bc{a,b,c}(A3:AP))) <qsf{cong} simp(abs(fap2bc{a,b,c}(A1:AP))). 
//simp{cong}(abs(fap2bc{a,b,c}(A1:AP))) <qsf{cong} simp{cong}(abs(fap2bc{a,b,c}(A3:AP))). 
}

equation {

/*
Nice idea but defining Y:BC Broadcast processes of interest is VERY problematic
fap2bc(X:Test) <qsf Y:BC ==> X:Test <f revap2bc(Y:BC)
*/

 // Non Cong

 X:AP ~   simp(abs(revap2bc(fap2bc{b,c}(X:AP)))). 

fap2bc{b,c}(X:AP) ~   simp(abs(fap2bc{b,c}(revap2bc(fap2bc{b,c}(X:AP))))). 

 X:Mx ~   simp(abs(revap2bc(fap2bc{g,h}(X:Mx)))). 
fap2bc{g,h}(X:Mx) ~   simp(abs(fap2bc{g,h}(revap2bc(fap2bc{g,h}(X:Mx))))). 

fap2bc{b,c}(X:AP) <qsf fap2bc{b,c}(Y:AP) ==> fap2bc{b,c}(revap2bc(fap2bc{b,c}(X:AP))) <qsf fap2bc{b,c}(revap2bc(fap2bc{b,c}(Y:AP))).

fap2bc{g,h}(X:Mx) <qsf fap2bc{g,h}(Y:Mx) ==> fap2bc{g,h}(revap2bc(fap2bc{g,h}(X:Mx))) <qsf fap2bc{g,h}(revap2bc(fap2bc{g,h}(Y:Mx))).

X:AP <f Y:AP ==> 
simp(abs(revap2bc(fap2bc{b,c}(X:AP)))) <f simp(abs(revap2bc(fap2bc{b,c}(Y:AP)))). 

X:Mx <f Y:Mx ==> 
simp(abs(revap2bc(fap2bc{g,h}(X:Mx)))) <f simp(abs(revap2bc(fap2bc{g,h}(Y:Mx)))). 


 

 X:AP <f{cong}   simp{cong}(abs(revap2bc(fap2bc{b,c}(X:AP)))). 

 simp{cong}(abs(revap2bc(fap2bc{b,c}(X:AP)))) <f{cong}  X:AP . 


abs(fap2bc{b,c}(revap2bc(fap2bc{b,c}(Y:BC)))) <qsf Y:BC. 
abs(fap2bc{b,c}(revap2bc(fap2bc{b,c}(Y:BC)))) <qsf{cong} Y:BC. 


X:AP <f{cong}Y:AP ==> fap2bc{a,b,c}(X:AP) <qsf{cong} fap2bc{a,b,c}(Y:AP).  


fap2bc(X:AP) <qsf{cong} fap2bc(Y:AP) ==> fap2bc(revap2bc(fap2bc(X:AP))) <qsf{cong} fap2bc(revap2bc(fap2bc(Y:AP))).

fap2bc(revap2bc(fap2bc(X:AP))) <qsf{cong} fap2bc(X:AP).
fap2bc(revap2bc(fap2bc(X:AP[]Y:AP))) <qsf{cong} fap2bc(X:AP[]Y:AP).

X:AP <f{cong} Y:AP ==> simp{cong}(abs(revap2bc(fap2bc(X:AP)))) <f{cong} simp{cong}(abs(revap2bc(fap2bc(Y:AP)))). 

simp{cong}(abs(revap2bc(fap2bc(X:AP)))) <f{cong} X:AP.
simp{cong}(abs(revap2bc(fap2bc(X:AP[]Y:AP)))) <f{cong} X:AP[]Y:AP.



}






