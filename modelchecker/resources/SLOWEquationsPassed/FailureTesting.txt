processes { 
Test: {  
Tas = a->(start->STOP[]stop->STOP).
Tbs = b->(start->STOP[]stop->STOP).
Taas = a->a->(start->STOP[]stop->STOP).
Tbas = b->a->(start->STOP[]stop->STOP).
Tabs = a->b->(start->STOP[]stop->STOP).
Tbbs = b->b->(start->STOP[]stop->STOP).

A = a->STOP.
B = b->STOP.
Loa = a->Loa.
Lob = b->Lob.
Loab = a->b->Loab.

Onea = a->STOP.
Oneb = b->STOP.
Oneab = a->STOP|b->STOP.  

Twoaa = a->a->STOP.
Twoab = a->b->STOP.
Twoba = b->a->STOP.
Twobb = b->b->STOP.
Twoax = a->(a->STOP|b->STOP).
Twobx = b->(a->STOP|b->STOP).

Threea = a->a->a->STOP .
Threeb = b->b->b->STOP .
Threeaab = a->a->b->STOP.
Threeaba = a->b->a->STOP.
Threebaa = b->a->a->STOP.
Threeabb = a->b->b->STOP. 
Threebba = b->b->a->STOP.
Threebab = b->a->b->STOP.
Threeaax = a->a->(a->STOP|b->STOP).
Threeabx = a->b->(a->STOP|b->STOP).
Threebax = b->a->(a->STOP|b->STOP).
Threebbx = b->b->(a->STOP|b->STOP).
Fouraaab = a->a->a->b->STOP.
Fourabaa = a->b->a->a->STOP.
}

Pro: {
Twoabs = a->b->Twoabs.
Twobas = b->a->Twobas.
Twoaas = a->a->Twoaas.
Twobbs = b->b->Twobbs.
La = a->La.
Lb = b->Lb.
Lasb  = a->Lasb| b->STOP.
Lasa  = a->Lasa| a->STOP.
Lbsb  = b->Lbsb| b->STOP.
Lbsa  = b->Lbsa| a->STOP.
Labsa  = b->Labsa| a->Labsa| a->STOP.
Labsab  = b->Labsab| a->Labsab| a->STOP|b->STOP.

D   = a->(b->D|b->STOP).
Dr  = a->b->Dr|b->STOP.
Da  = a->b->Da|a->STOP.
Dx  = a->(b->Dx|a->STOP).
G  = b->(b->G|b->STOP).
Gr = b->b->Gr|b->STOP.
Ga = b->b->Ga|a->STOP.
Gx = b->(b->Gx|a->STOP).
I  = a->(a->I|b->STOP).
Ir = a->a->Ir|b->STOP.
Ia = a->a->Ia|a->STOP.
Ix = a->(a->Ix|a->STOP).

E  = a->b->X, X= a->X.
E1 = b->b->X, X= a->X.
E2 = b->a->X, X= a->X.
E3 = a->a->X, X= a->X.
F  = a->X, X= a->X|b->STOP.
F1  = b->X, X= a->X|b->STOP.
F2  = b->X, X= a->X|a->STOP.
F3  = a->X, X= a->X|a->STOP.
Ex1 = b->b->X, X= a->X| b->X.
Ex2 = b->a->X, X= a->X| b->X.
Ex3 = a->a->X, X= a->X| b->X.
Fx  = a->X, X= a->X| b->X|b->STOP.
Fx1  = b->X, X= a->X| b->X|b->STOP.
Fx2  = b->X, X= a->X| b->X|a->STOP.
Fx3  = a->X, X= a->X| b->X|a->STOP.


}
Flags:{
Stop = stop->STOP.
Start = start->STOP.
}
Zoo:{

ZL = ((Dx:Pro=>Stop:Flags)[]Start:Flags)||{a,b,stop,start}Twoaa:Test.
ZR =((Twoabs:Pro=>Stop:Flags)[]Start:Flags)||{a,b,stop,start}Twoaa:Test.
}
}

operation {
ZL <t{cong} ZR.  
//ZR <t{cong} ZL.

ZL <t ZR.
//Dx:Pro <f{cong} Twoabs:Pro.

//((E3:Pro=>Stop:Flags)[]Start:Flags)||{a,b,stop,start}Taas <t{cong}
 //   ((Twoaas:Pro=>Stop:Flags)[]Start:Flags)||{a,b,stop,start}Taas . 
}

equation {
Y:Pro <f{cong} Z:Pro ==> forall{X:Test} ( 
    ((Y:Pro=>Stop:Flags)[]Start:Flags)||{a,b,stop,start}X <t{cong}
    ((Z:Pro=>Stop:Flags)[]Start:Flags)||{a,b,stop,start}X  
                ).
 forall{X:Test} ( 
    ((Y:Pro=>Stop:Flags)[]Start:Flags)||{a,b,stop,start}X <t{cong}
    ((Z:Pro=>Stop:Flags)[]Start:Flags)||{a,b,stop,start}X  
                )  ==> Y:Pro <f{cong} Z:Pro. 


//Y:Pro <f Z:Pro ==> forall{X:Test} (X||{a,b}Y:Pro <t X||{a,b}Z:Pro).
//forall{X:Test} (X||{a,b}Y:Pro <t X||{a,b}Z:Pro) ==> Y:Pro <f Z:Pro.
}


/***  ((Y:Pro<f[cong]Z:Pro) ==> forAll[X:Test]((((Y:Pro=>Stop:Flags)[]Start:Flags)||[a, b, stop, start]X:Test)<t[cong](((Z:Pro=>Stop:Flags)[]Start:Flags)||[a, b, stop, start]X:Test)))
        Simulations Passed  105/1521 (implies short circuit ass/conc 98/0)   [true ==> false, Forall fail, ((((Y:Pro=>Stop:Flags)[]Start:Flags)||[a, b, stop, start]X:Test)<t[cong](((Z:Pro=>Stop:Flags)[]Start:Flags)||[a, b, stop, start]X:Test)) trace = [[start], a, a], var X:Test->Taas, ,  free Y:Pro->E3, Z:Pro->Twoaas, ]
**  (forAll[X:Test]((((Y:Pro=>Stop:Flags)[]Start:Flags)||[a, b, stop, start]X:Test)<t[cong](((Z:Pro=>Stop:Flags)[]Start:Flags)||[a, b, stop, start]X:Test)) ==> (Y:Pro<f[cong]Z:Pro))
        Simulations Passed  10/1521 (implies short circuit ass/conc 0/1)   [true ==> false, (Y:Pro<f[cong]Z:Pro) trace = [Ref[b]], var Y:Pro->Labsa, Z:Pro->Twoabs, ]
**  ((Y:Pro<f Z:Pro) ==> forAll[X:Test]((X:Test||[a, b]Y:Pro)<t (X:Test||[a, b]Z:Pro)))
        Simulations Passed  1521/1521 (implies short circuit ass/conc 1438/0) 
Compiling completed!
Sat Jan 05 08:20:53 NZDT 2019**  (forAll[X:Test]((X:Test||[a, b]Y:Pro)<t (X:Test||[a, b]Z:Pro)) ==> (Y:Pro<f Z:Pro))
        Simulations Passed  1521/1521 (implies short circuit ass/conc 0/83) 
**     ##Equations## 3157/6084
*/














