processes {
//Z = STOP.
//Z1 = ERROR.
A2l = a->b->A2l.
E = b->c->STOP. 
D =  b->c->D.
 
One = E||A2l.
Two =a E||A2l.
Three = D||A2l.

Four =a D||A2l.
/* 

One = A2l||A.
Two = A||A2l. */
}

operation{ 
One ~ Two.
Three ~ Four.
One !~p Two.
Three ~p Four.
//A||A ~ A||A.
//A||B ~ A||A.
//E||A2l ~ aut(A2l||E).
//E||A2l ~a aut(A2l||E).

}
/*
equation {
X||Y ~ Y||X.
aut(X||Y) ~  X||Y.
aut(X||Y) ~a  X||Y.
//aut(X||Y) ~a  aut(X||Y).
// ((X||Y)=>Z) ~ a2p2a((X||Y)=>Z).
// ((X||Y)[]Z) ~ a2p2a((X||Y)[]Z).
//((X=>Y)[]Z) ~ a2p2a((X=>Y)[]Z).
}*/











