processes {
//Bug2  in broadcast comunication
// Good but not broadcast
S = x->S|a->STOP.
R = x->STOP.
Good = S||R.
SR = (a->ERROR|x->a->STOP).

//Broadcast  Fail  initial a lost by ||
Sb = x!->Sb|a->STOP.
Rb = x?->STOP.
Bug = Sb||Rb.
SbRb = (a->ERROR|x!->X),
     X = (x!->X|a->STOP).

Sbb = x?->Sbb|a->STOP.
Rbb = x!->STOP.
Bugb = Sbb||Rbb.
SbbRbb = (a->x!->STOP|x!->a->STOP).
}

automata S,R,Good,SR.

automata Sb,Rb,Bug,SbRb.

automata Sbb,Rbb,Bugb,SbbRbb.

operation {
Bug ~ SbRb.
Bugb ~ SbbRbb.
Good ~ SR.
}

