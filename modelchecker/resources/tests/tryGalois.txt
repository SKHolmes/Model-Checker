processes {
O  = a!->STOP. 
Ox = a!->STOP|b?->STOP.
O1 = a!->X, X = b?->X.
O2 = a!->b?->X, X = a!->X.
O3 = a!->X|b?->O3, X = a!->X.
O4 = a!->X|b?->O4, X = b?->a!->X.
O5 = a!->b?->X, X = a!->b?->X.
O6 = a!->b?->O6.
O7 = a!->b?->O7|a!->c?->O7.
O8 = a!->b?->O8|d!->c?->O8.
O9 = a!->X|b?->O9, X = c?->d!->X.

A  = b?->STOP. 
A1 = b?->X, X = b?->X.
A2 = b?->b?->X, X = a!->X.
A3 = b?->X|b?->A3, X = a!->X.
A4 = b?->X|b?->A4, X = b?->a!->X.
A5 = b?->b?->X, X = a!->b?->X.
A6 = b?->b?->A6.
//A7 = b?->b?->A7|a!->c?->A7.
//A8 = b?->b?->A8|d!->c?->A8.
A9 = b?->X|b?->A9, X = c?->d!->X.

OO = revap2bc(O).
OO2 = revap2bc(O2).
//OOO = fap2bc(OO).
}

alphabet{b?,c?}
operation {
////O <q O2.
 //revap2bc(O) <f revap2bc(O2).
//O <q{cong} O2.
//// revap2bc(O) <f{cong} revap2bc(O2).
}

equation{
X <q{cong} fap2bc(revap2bc(X)).
Z <q{cong} X ==> revap2bc(Z) <f{cong} revap2bc(X). 
} 




