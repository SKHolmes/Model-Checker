processes {
 //Singelton Failure Refinement  (a){a,c} is short for (a){a}, (a){c}
A = a!->b!->STOP.                   //Qsf  (!a,!b){X} NOTE (a!) not quiescent 
Andet = a!->b!->STOP|a!->c!->STOP.  //Qsf (!a,!b){X}, (!a,!c){X}    
Adet = a!->(b!->STOP|c!->STOP).     //Qsf (!a,!b){X}, (!a,!c){X}}

Asf = a!->b!->STOP|a!->c!->STOP|a!->STOP. //Qsf (!a){X}, (!a,!b){X}, (!a,!c){X} 
Adsf = a!->(b!->STOP|c!->STOP)|a!->STOP. //Qsf (!a){X}, (!a,!b){X}, (!a,!c){X} 


}
alphabet {a!,b!,c!}
operation {

Andet <qsf  A. 
Adet !<qsf  A. 
Andet <qsf Adet.
Adet <qsf Andet.

Andet !<qsf Asf.

Asf <qsf Andet.
Andet <qsf Adsf.
Adsf <qsf Andet.

}


