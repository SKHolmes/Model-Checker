processes {
Zero1 = STOP.


One2 = a->STOP.
One3 = a->ERROR.

One5 = b->STOP.
One6 = b->ERROR.

Two1 = a->b->STOP.
Two2 = a->b->ERROR.


Two5 = a->STOP|b->STOP.
Two6 = a->ERROR|b->STOP.

Two8 = a->X|b->X, X = STOP.
//  Two9 = (a->STOP + b->STOP).

}
automata One2,One3,One5,One6.
automata Two1,Two2,Two5,Two6,Two8.

equation {
X|Y ~ Y|X.
X|(Y|Z) ~ (X|Y)|Z.

X|| Y ~ Y||X.

X||STOP ~ X.
X||X ~ X.

(x->Y)|| (y->Y) ~ (x->STOP||y->STOP)=>Y.


(a->STOP)=>X ~ a->X.
X=>STOP ~ X.

(STOP=>X) ~ X.  //   fixed

(X|Y)=>Z ~ (X=>Z) | (Y=>Z).

X=>(Y|Z) # (X=>Y)|(X=>Z).

 //X=>(Y|Z) * (X=>Y)|(X=>Z). NO should not work

}









