processes {     //Oneaa = a->STOP.
C3 = a->a->C3.
E3 = a->a->X, X= a->X.
Onebb = b->STOP|a->Onebb.
Threeaba = a->b->a->STOP.
Two = a->b->Two.
Twoabs = a->b->Twoabs.
Da  = a->b->Da|a->STOP.
Dax  = a->b->x->Dax|a->STOP.
Q = Da ||Onebb.
P = Twoabs  || Onebb.
}
operation {
Twoabs  <f Da. 
P <t Q.
P <t{cong} Q.
Da  <f Twoabs. 
Q <t P.
Q <t{cong} P.
 
Twoabs  <f{cong} Da. 
P <t{cong} Q.
Da  <f{cong} Twoabs. 
Q <t{cong} P.



//Da <f{cong} Threeaba.  //? FALSE
//Dax <f{cong} Threeaba.  //? FALSE
//Twoabs <f{cong} D.  //Correctly FALSE
//Q <t{cong} P.

}

























