processes {
A = a!->b?->STOP.
B = fbc2ap(A).
C = revbc2ap(B).

S = a^->b->STOP.
T = revbc2ap(S).
U = fbc2ap(T).
//A = c!->x!->d?->STOP.
//B = q!->x?->e?->STOP.
//C = A||B.
//D = fbc2ap(C).
//E = revbc2ap(D).
/*D  = d!->(x?->STOP||y?->STOP).



X1 = d?->(x!->STOP||y!->e?->STOP).
Y1 = fbc2ap(X1).

*/
}
operation{
C <q A.
A <q C.

S <f U.
U <f S.
}






