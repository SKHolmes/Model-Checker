processes {
 Az = STOP.
//Z1 = ERROR.
A = a->STOP.
B = b ->STOP.
 Al = a->Al.

/*Bl = b-> Bl.

 E = a->ERROR.  //Problem Child

A2 = a->b->STOP.
A2l = a->b->A2l.

Ax = a->X, X= b->X.
Ax1 = a->X, X= a->X.
Ax2 = a->X, X= b->Ax2.

A2c = a->STOP | b->STOP.

Ala = b->Ala| a->STOP.
Ala1 = a->Ala1| c->STOP.
Ala2 = b->a->Ala2| a->STOP.  //Problem Child
*/

Out1 = Az=>A.
Out11 = Az[]Az.
//Out2 = (Az[]Az) => Al.
}

operation {

}
/*
equation {
X <f X.
(X[]Y) <f (Y[]X).
(X[]Y)=>Z <f (Y=>Z)[](X=>Z).
(Y=>Z)[](X=>Z)  <f (X[]Y)=>Z.
}
*/






















