processes {
/* Bisim needs changing to glue these roots together.

In place of equivalent color sets USE equality of 

Union of the colered events (name, color(post)) leaving any root node
*/

One2 = a->STOP.
One5 = b->STOP.

X = (c->STOP| d->ERROR).
Y = One2 => ( One5 + One2).
Y1 = (One2 =>  One5 )+ (One2 => One2). 

Z =  (s->STOP)=>Y1.
W = (s->Y1).
}

automata Y,Y1, X, Z,W.

operation {

(X => ( Z + Y)) ~ ((X =>  Z )+ (X => Y)).

(s->STOP)=>X ~ (s->X).

X=> (Y=>Z) ~ (X=>Y)=>Z .

}


lengthEdgeValue: 10
maxNodeLabelValue: 10
operationFailureLabelValue: 10
operationPassLabelValue: 10

fairAbstractionSelected: false
autoSaveSelected: false
darkModeSelected: false
pruningSelected: false
liveCompillingSelected: false
